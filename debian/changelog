php-phalcon (2.0.13-ppa1~precise) precise; urgency=low

  * Restored Phalcon\Text::camelize behavior #11767
  * Used Zephir v0.9.2

 --  Senno Kaasjager <senno.kaasjager@gmail.com>  Fri, 20 May 2016 14:23:00 +0100

php-phalcon (2.0.12-ppa1~precise) precise; urgency=low

  * Fixed regression changes for Phalcon\Mvc\View\Engine\Volt::callMacro #11745
  * Fixed the argument type of Phalcon\Flash::success #11764
  * Restored Phalcon\Text::camelize behavior #11767

 --  Senno Kaasjager <senno.kaasjager@gmail.com>  Fri, 20 May 2016 14:23:00 +0100

php-phalcon (2.0.11-ppa2~precise) precise; urgency=low

  * Rebuild with latest Phalcon

 --  Serghei Iakovlev <serghei@phalconphp.com>  Thu, 06 May 2016 09:02:00 +0300

php-phalcon (2.0.11-ppa1~precise) precise; urgency=low

  * Fixed Model magic set functionality to maintain variable visibility and utilize setter methods
  * Added a prepareSave event to model saving
  * Added support for OnUpdate and OnDelete foreign key events to the MySQL adapter
  * Added ability to setLogLevel on multiple logs
  * Fixed regression changes for Phalcon\Translate\Adapter\Gettext::prepareOptions
  * Fixed Phalcon\Mvc\View\Engine\Volt::callMacro bug. Now it's correctly calling call_user_func_array instead of call_user_func
  * Fixed undefined method call Phalcon\Mvc\Collection\Manager::getConnectionService. Now Phalcon\Mvc\Collection::getConnectionService works correctly in according to documentation

 --  Serghei Iakovlev <serghei@phalconphp.com>  Thu, 05 May 2016 23:30:00 +0300

php-phalcon (2.0.9-ppa1~precise) precise; urgency=low

  * Improved overall support of SQL for migrations
  * Fixed bug that double serializes data using Redis adapter
  * Added console:boot event to allow the developer to perform initialization actions
  * Added implementation options allowEmpty for Phalcon\Mvc\Model\Validator\Ip
  * Fixed SQLite bug[#10997] related to setting of index type
  * Added Phalcon\Db\Dialect\Sqlite::listIndexesSql - to generate the SQL to get query list of indexes
  * Fixed MySQL bug[#11036] related to setting of index type
  * Added missed RouteInterface::setHostname, RouteInterface::getHostname
  * Added strict option for ExclusionIn validator
  * Added Phalcon\Text::underscore - to make a phrase underscored instead of spaced
  * Added Phalcon\Text::humanize - to make an underscored or dashed phrase human-readable
  * Added ability to change document class to be returned in ODM through class option

 --  Senno Kaasjager <senno.kaasjager@gmail.com>  Sat, 26 Nov 2015 08:41:00 +0100

php-phalcon (2.0.8-ppa1~precise) precise; urgency=low

  * Added Phalcon\Security\Random::base58 - to generate a random base58 string
  * Added Phalcon\Logger\Adapter::isTransaction() to check whether the logger is currently in transaction mode or not (Phalcon 1.3 behavior)
  * Phalcon\Session\Adapter now closes the session when the adapter is destroyed (Phalcon 1.3 behavior)
  * Fixed fetching of data in modes FETCH_CLASS, FETCH_INTO and FETCH_FUNC in Phalcon\Db
  * Added missing code property in Phalcon\Validation\Message available in Phalcon 1.3.x
  * Added Phalcon\Db\Column::TYPE_TIMESTAMP to allow migrations on these kind of columns
  * Added Phalcon\Db\ColumnInterface::hasDefault to check if a column has a default value declared in its database column definition
  * Fixed determining of default value for column in Phalcon\Db\Dialect\MySQL, Phalcon\Db\Dialect\Sqlite and Phalcon\Db\Dialect\Postgresql classes
  * Now Phalcon\Mvc\Model::__call invokes finders as in __callStatic
  * Fixed Phalcon\Db\Dialect\Postgresql::getColumnDefinition for BIGINT and BOOLEAN data types
  * Fixed BOOLEAN default value in Phalcon\Db\Dialect\Postgresql
  * Added Phalcon\Validation\Validator\CreditCard - validation credit card number using luhn algorithm

 --  Senno Kaasjager <senno.kaasjager@gmail.com>  Sat, 24 Oct 2015 21:32:00 +0100

php-phalcon (2.0.7-ppa1~precise) precise; urgency=low
  * `Image\Adapter\Gd::save()` no longer fails if the method or the instance is created with a filename without an extension
  * Fixed segfault in `Image\Adapter\Imagick::text()`
  * Exceptions thrown in Volt compiler are now `Phalcon\Mvc\View\Engine\Exception`
  * Now you can import macros from other files using `{% include "file.volt" %}`
  * Undefined function calls fall back to macro calls in Volt
  * Automatic bound parameters in `Mvc\Model\Criteria` now uses a different prefix than `Mvc\Model\Query\Builder` to avoid collissions
  * Added `Cache\Multiple::flush()` to flush the cache backends added to the multiple system
  * Fixed `Session\Bag::remove()`
  * `Session\Bag::destroy()` eliminates any temporary data in the variables bag
  * `afterCreate`/`afterUpdate` are only called if saving related records was successful
  * Added an optional parameter removeData to `Session\Adapter::remove()` to remove any data in `$_SESSION` that belongs to the uniqueId or the wholesession data
  * Now session variables making use of unique prefixes use `#` as internal separator
  * Added parameter the changing operator for conditions in method `Mvc\Model\Criteria::fromImput()`[#10749](https://github.com/phalcon/cphalcon/issues/10749)
  * Added `\Phalcon\Queue\Beanstalk::listTubes()` to get list of a tubes
  * Added a fix to avoid that a table present in many sub-queries causes invalid SQL generation
  * Add `CookieInterface`, update `Cookie` and `Cookies` to use this interface
  * Decoupling `Cookies` and `Cookie`   * Check `Session` state before using it in `Cookie`. [#10789](https://github.com/phalcon/cphalcon/issues/10789)
  * Fixed merge of `Phalcon\Config` instances containing objects different than `Phalcon\Config` compatible instances
  * When creating tables in Postgres, inline PRIMARY keys are now escaped properly[#10797](https://github.com/phalcon/cphalcon/pull/10797)
  * Fixed incorrect generation of `SELECT COUNT(\*)` causing unexpected exceptions when `phqlLiterals` is disabled
  * Added `Phalcon\Security\Random`
  * secure random number generator class. Provides secure random number generator which is suitable for generatin gsession key in HTTP cookies, etc

 --  Stephen Hoogendijk <stephen@tca0.nl>  Tue, 27 Aug 2015 09:54:00 +0100


php-phalcon (2.0.5-ppa1~precise) precise; urgency=low
  * Fixed a bug that makes that attaching an events manager to an Mvc\Application causes view->render() not being called
  * Fixed bug that makes generated SQL statements using FOR UPDATE not being parsed correctly
  * The email filter now no longer removes the ' character  [#10603](https://github.com/phalcon/cphalcon/pull/10603)
  * When an array is bound the cached representation in PHQL makes the SQL being incorrectly generated the second time.

 -- Stephen Hoogendijk <stephen@tca0.nl>  Tue, 14 Jul 2015 09:54:00 +0100

php-phalcon (2.0.4-ppa1~precise) precise; urgency=low
  * Fixed bug in `Phalcon\Mvc\Model::update()` that throws an exception when the record does exist
  * Now links in `Phalcon\Debug` point to https://api.phalconphp.com instead of http://docs.phalconphp.com
  * Implemented a more versatile way to assign variables in Volt allowing to assign properties and array indexes
  * Improved generation of macros in Volt using anonymous functions instead of plain PHP functions
  This allow to bind the adapter object and inject services within them
  * Fixed generation and validation of default parameters in Volt's macros
  * Added `Phalcon\Assets\Manager::getCollections()` to return all collections registered (https://github.com/phalcon/cphalcon/pull/2488)
  * Now `Phalcon\Mvc\Url::getStatic()` generates URLs from routes
  * Introduced `Phalcon\Mvc\EntityInterface` to allow parameters receive both Phalcon\Mvc\Model and `Phalcon\Mvc\Collection` instances
  * Added `Phalcon\Session\Adapter::setName()` to change the session name
  * Added BIGINT support in Phalcon\Db
  * Added new types `Phalcon\Db\Column::BLOB` and `Phalcon\Db\Column::DOUBLE` (https://github.com/phalcon/cphalcon/pull/10506)
  * Automatic binding of Large Object data (LOB) in the ORM
  * Support for BIT types in MySQL with binding as booleans
  * Added `Phalcon\Flash\Direct::output()` allowing to place flash messages in a specific place of the view (https://github.com/phalcon/cphalcon/pull/629)
  * Added 'autoescape' option that allows to globally enable autoescape in any Volt template
  * Added readAttribute/writeAttribute to `Phalcon\Mvc\Collection\Document`
  * Added toArray to `Phalcon\Mvc\Collection\Document`
  * Global setting db.force_casting now forces casting bound parameters to specified bind types
  * Introduced new placeholders in PHQL enclosed in brackets that allow to set the type: {name:str} or {names:array}
  * Now you can bind arrays in bound parameters in PHQL
  * Global setting orm.cast_on_hydrate allow to cast hydrated attributes to the original types in the mapped tables instead of using strings
  * Values in LIMIT/OFFSET clause are now passed using bound parameters in PHQL
  * Allowing late state binding in both Simple/Complex results to allow override `Mvc\Model::cloneResultMap`
  * Added method `distinct()` in `Phalcon\Mvc\Model\Criteria` (https://github.com/phalcon/cphalcon/issues/10536)
  * Added global setting orm.ignore_unknown_columns to ignore unexpected columns when hydrating instances in the ORM
  This fixes extra auxiliar columns used in `Db\Adapter\Pdo\Oracle`
  * Added support for afterFetch in `Mvc\Collection`
  * Added 'beforeMatch' parameter in @Route annotation of `Mvc\Router\Annotations`
  * Added groupBy/getGroupBy/having/getHaving to `Mvc\Model\Criteria`
  * `Phalcon\Mvc\Model::count()` now return values as integer
  * Removed `__construct` from `Phalcon\Mvc\View\EngineInterface`
  * Added `Phalcon\Debug\Dump::toJson()` to return an JSON string of information about a single variable
  * Now instances in Phalcon\Di are built using internal optimizers instead of ReflectionClass (PHP 5.6)
  * Added `Phalcon\Mvc\Model\Validator\Ip` from incubator
  * Added parameter return `defaultValue` in `Phalcon\Mvc\Model\Validator::getOption()`
  * Fixed in `Phalcon\Validation\Validator\Identical` the name of parameter `value` to `accepted` according docs
  * Added method `Text:dynamic()` generate random text in accordance with the template (https://github.com/phalcon/cphalcon/pull/10571)
  * Now Mvc\Router has default routes with unicode support (https://github.com/phalcon/cphalcon/pull/10544)

 -- Sid Roberts <sid@sidroberts.co.uk>  Mon, 07 Jul 2015 15:00:00 +0100

php-phalcon (2.0.3-ppa1~vivid) vivid; urgency=low
  * Added support for Behaviors in `Phalcon\Mvc\Collection`
  * Added SoftDelete and Timestampable behaviors to Collections
  * Implemented Namespace aliases in PHQL
  * Now you can define if a virtual foreign key must ignore null values or not
  * Fixed bug that added two ? in `Mvc\Url::get()` when using query parameters (https://github.com/phalcon/cphalcon/issues/10421)
- Now string attributes in models can be marked to allow empty string values (https://github.com/phalcon/cphalcon/issues/440)
  * Added an option to return the SQL to be generated from a `Mvc\Model\Query` instance (https://github.com/phalcon/cphalcon/issues/1908)
  * Fix doesn't correct column domain in `Phalcon\Db\Dialect::select()` (https://github.com/phalcon/cphalcon/pull/10439)
  * Added support for DOUBLE type in MySQL
  * `Phalcon\Tag\Select` now handles array values as strings avoiding that zero will be handled as empty string (https://github.com/phalcon/cphalcon/issues/2921)
  * PHQL now supports CASE/WHEN/ELSE expressions (https://github.com/phalcon/cphalcon/issues/651)
  * Fixed bug that passes non-string values to `Phalcon\Crypt::encrypt` from `Phalcon\Http\Cookies`
  * Fixed bug that didn't pass the schema name in the sequence name (PostgreSQL)
  * Attribute persistent is now removed from the DNS attributes in PDO connections to avoid errors in PostgreSQL (https://github.com/phalcon/cphalcon/issues/10484)

 -- Sid Roberts <sid@sidroberts.co.uk>  Mon, 07 Jul 2015 15:00:00 +0100

php-phalcon (2.0.2-ppa1~vivid) vivid; urgency=low
  * Added `stats()` methods to Beanstalk
  * Fixed segfault when a docblock does not have annotations (https://github.com/phalcon/cphalcon/issues/10301)
  * Fixed wrong number of parameters passed when triggering an event in Mvc\Collection
  * Now `Mvc\Model` checks if an attribute has a default value associated in the database and ignores it from the insert/update generated SQL
  * Readded `Http\Request::hasPut()` (https://github.com/phalcon/cphalcon/issues/10283)
  * Phalcon\Text
    * Added method `reduceSlashes()` - Reduces multiple slashes in a string to single slashes
    * Added method `concat()` - Concatenates strings using the separator only once without duplication in places concatenation
  * Added conditional on Session adapter start() to check if the session has already been started
  * Added `status()` function in Session adapter to return the status of the session (disabled/none/started)

 -- Sid Roberts <sid@sidroberts.co.uk>  Mon, 07 Jul 2015 15:00:00 +0100

php-phalcon (2.0.1-ppa1~vivid) vivid; urgency=low
  * Added missing Phalcon\Debug::listenLowSeverity
  * Added new theme in Phalcon\Debug
  * Allow to count and iterate Phalcon\Session\Bag as in 1.3.x
  * Renamed getEventsManager to getInternalEventsManager in Phalcon\Di to avoid collision
   with existing services
  * Added constants FILTER_* to Phalcon\Filter for filters names
  * Fixed multibyte characters in cssmin/jsmin
  * Added Phalcon\Security::destroyToken() to remove current token key and value from session
  * Changed Phalcon\Security::isLegacyHash() to return TRUE if passwordHash is not a valid bcrypt hash (instead of false),
   removed first argument (password), since it's not used in the function
  * Restored alternative hash algorithms in Phalcon\Security that were available in 1.3.x
  * Fixed bug that makes instances returned in Model::findFirst to be not completely initialized
  * Added support for general SELECT ALL/SELECT DISTINCT in PHQL
  * Added support for "not in" test in Volt
  * Phalcon\Debug\Dump
  * Renamed method var() to variable()
  * Renamed method vars() to variables()
  * Phalcon\Mvc\Model::findFirst() now allows hydration (#10259).

 -- Stephen Hoogendijk <stephen@tca0.nl>  Mon, 11 May 2015 09:07:00 +0100

php-phalcon (2.0.0-ppa1~vivid) vivid; urgency=low
  * Full rewrite of most components in Zephir
  * Added Phalcon\Mvc\Micro::error for better handling of exceptions
  * Phalcon\Forms\Form::label does not share attributes with the ones that belong to the element
  * Added parameter 'params' to set default conditions when retrieving related records
  *  Added filters "int!" and "float!" that cast values to the respective type
  * Filter "alphanum" now uses a regular expression instead of internal functions for better behaviour in 64bits
  * Added 'allowEmpty' option in Phalcon\Validation validators to skip validation if the value is empty
  * Added Phalcon\Validation::setDefaultMessages to set default values in validators
  * Added Phalcon\Validation\Validator\Numericality
  * Added events in Phalcon\Di: beforeServiceResolve / afterServiceResolve
  * Mysql database introspector now uses DATABASE() as default schema
  * Added option to disable cache keys in Cache\Backend\Memcache
  * Mvc\View component is now disabled automatically when redirecting using Http\Response
  * Mvc\Model::dynamicUpdate now works better as it compares if every field has changed according to its data type
  * Added Db\Adapter\Pdo::getErrorInfo() to obtain the last error generated in a PDO connection

 -- Stephen Hoogendijk <stephen@tca0.nl>  Wed, 22 Apr 2015 09:07:00 +0100

php-phalcon (1.3.4-ppa1~vivid) vivid; urgency=low
  * Fix improper access to \Phalcon\Debug::$_charset (#2840)
  * Fix segfault in Phalcon\Mvc\Collection when an invalid parameter is passed as conditions
  * Fix segfault when MongoClient does not return a valid collection in Phalcon\Mvc\Collection
  * Fix possible memory corruption when phalcon_concat_self does not properly separate values

 -- Stephen Hoogendijk <stephen@tca0.nl>  Fri, 14 Nov 2014 18:58:20 +0100

php-phalcon (1.3.3-ppa1~vivid) vivid; urgency=low
  * Fix segmentation fault in zim_Phalcon_Http_Request_getBasicAuth (#2819)
  * Fix memory corruption on unclean shutdown (#2829)

 -- Stephen Hoogendijk <stephen@tca0.nl>  Fri, 27 Jun 2014 15:42:00 +0100

php-phalcon (1.3.2-ppa1~vivid) vivid; urgency=low
  * fix inverted test in Model/setSnapshotData() (issue #2466)
  * Updated Phalcon\Queue\Beanstalk\Job::touch comment
  * Fixed use columns as referenced columns in mysql createTable() reference...
  * #2414   * Removed check for DBG in session/adapter
  * Updated Model::__set
  * #1989 Supported \Phaclon\Db\Index: TYPE
  * Updated Phalcon\Mvc\Model\Query\Builder::groupBy
  * Validation, setDefaultMessages fix
  * Fix pagination nativeArray test-unit failed
  * Add Phalcon\Translate\Adapter\Gettext
  * Add Phalcon\Config\Adapter\Yaml
  * #1803 Bug join alias
  * Fix valid function for the first call
  * Acl bug
  * #2402 issue
  * Ignore "value" attribute in TextArea.
  * #2394 Add Phalcon\Validation\MessageInterface
  * Relative namespace
  * #2386
  * Fixing a typo
  * #2375 Add check messages is object in Phalcon\Validation::appendMess...
  * Update affected rows for selects.
  * #2196: Declare missing functions
  * Fix broken condition
  * Add Phalcon\Mvc\Model\MetaData\Strategy
  * Fix offsetUnset
  * Changing "file_exists" funciton for "is_file".
  * Fix bug about updated property for Phalcon\Session\*
  * #2291 Middlewares do not stop operation when before event triggered in Micro as documented http://docs.…
  * #1608 about Phalcon\Mvc\Router\Annotations
  * #2019 and added tests
  * model: added methods arg infos
  * #2319 In `Model::_postSaveRelatedRecords` add check whether value is object
  * #2321: Fixed the null value for position
  * #2313 about Phalcon\Annotations\Annotation
  * #2229 (cast and convert not working)
  * Add method Phalcon\Assets\Collection::addFilter
  * Add Phalcon\Session\Adapter\memcache and Phalcon\Session\Adapter\Libmemcached
  * Add class Phalcon\Session\Adapter\Libemcached
  * Add class Phalcon\Session\Adapter\Memcache
  * \Phalcon\Tag::XHTML5 was returning empty string
  * #2278 add Phalcon\Logger\Multiple::CRITICAL
  * Tag, add title separator to append/prepend title
  * #2250 Updated Phalcon\Db\Dialect::select
  * #2270 updated phalcon_camelize
  * Add namespace support for view
  * #2259 Updated \Phalcon\Image\Adapter::crop
  * #2262 `\Phalcon\Logger\Formatter\Json` Wrong number of parameters
  * #2244 add judge conditions in `Phalcon\Mvc\Model\Manager::getRelationRecords`
  * Removed final keyword from Model constructor
  * #2111 – replacing bindParam to bindValue to avoid unexpected reference changes
  * #2002 Tag::linkTo() to allow the addition of query string parameters
  * Add `allowEmpty` option to \Phalcon\Mvc\Model\Validator\*
  * Use phalcon_camelize for namesapce Add \Phalcon\Session\Adapter::setId Fixed #1932 Phalcon\Http\…
  * #2111 – replacing bindParam to bindValue to avoid unexpected reference changes
  * Fix wrong issent() call on non Response objects
  * #2236   * in mysql tinyint(1) is not boolean it's an int between 0 and 127
  * Add \Phalcon\Session\Adapter::setId
  * Fix BUG \Phalcon\Model\Validate\*
  * Travis fast-finish builds
  * #2157 and added tests
  * #2196 Declared missing functions
  * Add `allowEmpty` option to \Phalcon\Mvc\Model\Validator\*
  * #2002 Tag::linkTo() to allow the addition of query string parameters
  * #2018 add method \Phalcon\Db\Result\Pdo::nextRowset
  * Use phalcon_camelize for namesapce
  * #1932 Phalcon\Http\Request\File extend SplFileInfo

 -- Stephen Hoogendijk <stephen@tca0.nl>  Fri, 27 Jun 2014 15:42:00 +0100

php-phalcon (1.2.5+git20140114-ppa1~vivid) vivid; urgency=low

  * Http\Cookie::__toString() will not throw exceptions (#1427)
  * Phalcon\Http\Cookie::__toString() will return a string value (#1428)
  * Camelize does not ignore the last character of a string anymore (#1436)
  * APC tests do not run under CLI when apc.enable_cli is 0 (#1449)
  * Phalcon\Debug::uri now supports both http and https (#987)
  * Fixed inconsistency in Tag::stylesheetLink/javascriptInclude w.r.t. local URLs (#1486)
  * Fixed bug in Phalcon\Queue\Beanstalk::read() (#1348, #1612)
  * Phalcon\Flash\Session::getMessages() incorrectly removed all messages (#1575)
  * Fixed bug in phalcon_fix_path() (#1601)
  * Added Phalcon\Mvc\Model\Row::toArray() method (#1506)
  * Added support for POINT type in MySQL (#1536)
  * Phalcon\Mvc\Model\Validator::getOption() returns NULL if the option does not exist (#1530)
  * Fixed parsing of annotations containing / (#1480)
  * Make sure that 'persistent' is resolved only when accessed for the first time (#1637)
  * Fix Phalcon\Session\Bag::remove() (#1637)
  * Bug fixes in beanstalkd protocol implementation
  * Phalcon\Paginator\Adapter\Model returns correct results even when page number is incorrect (#1654)
  * Bug fix: no arguments were passed to beforeMatch handler in Phalcon\Mvc\Router (#1556)
  * Phalcon\Logger\Adapter::setLogLevel() is honored by transactions (#1716)
  * Bug fixes in Phalcon\Db\Adapter\Pdo::describeColumns() (#1562)
  * Phalcon\Session\Adapter::__destruct() now calls session_write_close() (#1624)
  * Volt: fixed bug in email_filed() (#1723)
  * Fixed PHP Notices in Phalcon\Debug::onUncaughtException() (#1683)
  * Phalcon\Logger\Adapter::commit() clears the queue (#1748)
  * Constant-time string comparison in Phalcon\Security::checkHash() (#1755)
  * Fix phalcon_escape_multi() to generate valid UTF-8 (#1681)

 -- Vladimir Kolesnikov <vladimir@extrememember.com>  Tue, 14 Jan 2014 22:30:00 +0200

php-phalcon (1.2.4~git20131023-ppa1~vivid) vivid; urgency=low

  * Fixed broken ACL inheritance (#905)
  * Fixed crash while rendering element's label (#1210)
  * Fixed XSS vulnerabilities (#1216, #1190)
  * Added support for APCu 4.0.2+ (#1234)
  * Fixed chaining of CSS/JS filters (#1198)
  * Fixed notices and warnings with complex PHQL queries (#1222)
  * Memory allocation optimizations (#1220)
  * Fixed regular expression in \Phalcon\Mvc\Model\Validator\Email (#1243)
  * Documentation bug fixes
  * Phalcon\Mvc\Model::hasOne/hasMany/belongsTo/hasManyToMany/addBehavior()
    are now public methods (#1166)
  * Added support for MySQL DOUBLE type (#1128)
  * Added support for UTF-8 characters in jsmin
  * Added support for UTF-8 to \Phalcon\Debug (#1099)
  * Fixed regression in \Phalcon\Http\Request::getRawBody() (#1091)
  * Implemented \Phalcon\Cache\Backend\Memory::queryKeys() (#1093)
  * Redirects use status descriptions from RFC 2616 (#1175)
  * \Phalcon\Config::merge now works with derived classes (#1024)
  * \Phalcon\Security::checkHash() allows to restrict the length of
    the password to avoid attacks like
    https://www.djangoproject.com/weblog/2013/sep/15/security/
  * \Phalcon\Config can now be cloned (#1277)
  * \Phalcon\Mvc\Query\Builder::__construct() ignores joins (#1327)
  * Bug with a custom Events Manager in Phalcon\Mvc\Models (#1314)
  * Micro Collections return Phalcon\Mvc\Micro\CollectionInterface (#1130)
  * \Phalcon\Forms\Form::getMessages() does not generate a fatal error
    if the form is valid (#1349)
  * Fixed memory leaks (#1345)
  * Fixed invalid memory reads/writes across the code (#1340)
  * Fixed HAVING handling in Phalcon\Mvc\QueryBuilder (#1396)
  * Bug fixes in \Phalcon\Logger\{Adapter,Formatter}\FirePhp (#1333)
  * Bug fixes in Phalcon\Cache\Backend\Xcache (#1406)
  * Phalcon\Forms\Element::__toString() does not throw exceptions
    anymore (#1413)
  * Other bug fixes (#947, #1131, #1040, #1275, #1392, #1396, #1399,
    backported patches from 1.3.0 etc)

 -- Vladimir Kolesnikov <vladimir@extrememember.com>  Sun, 23 Oct 2013 10:59:59 +0300

php-phalcon (1.2.3-ppa1~vivid) vivid; urgency=high

  * Hardening patches (#1044)

 -- Vladimir Kolesnikov <vladimir@extrememember.com>  Sun, 11 Aug 2013 22:59:59 +0300

php-phalcon (1.2.2.1-ppa1~vivid) vivid; urgency=low

  * Fixed bugs in Phalcon\Config (#875, #980, #982, #1000, #1005)
  * Fixed 'Sanitize filter is not supported' error (#1018, #1020)
  * Fixed AnnotationsAdapter getProperty error (#995)
  * Proper support for has-many-to-many (#938, #966)
  * CSS joining bug fix (#951, #957)
  * Fixed bugs in Paginator (#826, #941)
  * Added decimal scale support (#935)
  * Fixed other bugs (#967, #999)

 -- Vladimir Kolesnikov <vladimir@extrememember.com>  Fri,  9 Aug 2013 13:19:00 +0300

php-phalcon (1.2.2-ppa1~vivid) vivid; urgency=low

  * Phalcon\Mvc\Model\Query\Builder may now use both integer
    and string placeholders (#701)
  * Fixed invalid memory reads when GC is on (#469, #927)
  * Phalcon\Flash\Session::getMessage('key') returns now
    an empty array if the key is not found (#908, #920)
  * Fixed bugs in Phalcon\Escaper (#917)
  * Fixed memory leaks for PHP < 5.4 (#910, #914, #916)
  * Fixed memory access violations (#911, #918, #927, #928)
  * Memory allocation optimizations (#912)

 -- Vladimir Kolesnikov <vladimir@extrememember.com>  Sat, 27 Jul 2013 02:10:01 +0300

php-phalcon (1.2.1-ppa1~vivid) vivid; urgency=low

  * Reduced overall memory usage (#834, #891, #893)
  * Faster internal array and string manipulation (#830, #833, #837)
  * Fixed PHP 5.5 compilation on Windows
  * Dispatching parameters now can be modified in 'beforeExecuteRoute'
    events
  * 'beforeException' events can now handle exceptions occurred when
    executing actions (#140)
  * Added Phalcon\Dispatcher::getHandlerClass and
    Phalcon\Dispatch::getActionMethod
  * Phalcon\Form\Element\* classes now implement
    Phalcon\Form\ElementInterface
  * Phalcon\Config\Adapter\Ini correctly handles empty sections and
    INI files without any sections (#829, #837)
  * Phalcon\Http\Request fully supports file arrays (#884, #888)
  * Added support for various padding schemes (PKCS7, ANSI X.923,
    ISO 10126, ISO/IEC 7816-4, zero padding, space padding) to
    Phalcon\Crypt (#864, #887)
  * Added getKey(), getError(), isUploadedFile() methods to
    Phalcon\Http\Request\File (#878, #888)
  * Dot-delimited directives in INI-files are now prsed correctly (#872)
  * Fixed memory leaks in cache backends (#860)
  * Fixed various memory corruption issues (#849, #852, #858, #860, #861)
  * Fixed broken Phalcon\Http\Response::setFileToSend() method (#831, #832)
  * Phalcon\Http\Response::setFileToSend() can now show the file in the
    browser instead of offering to download it (#853)
  * Added Phalcon\Adapter\Config\Json class to read JSON configs (#844)
  * Added FirePHP Log Adapter and Formatter (#845)
  * Faster Phalcon\Config implementation (#837)
  * Phalcon\Config now support numeric properties as well (#837)
  * Database dialects now support BOOLEAN data type (#816)
  * Phalcon\Mvc\Application::handle() now checks whether the class exists
    before include()'ing its file (#812, #818)

 -- Vladimir Kolesnikov <vladimir@extrememember.com>  Wed, 23 Jul 2013 20:30:50 +0300

php-phalcon (1.2.0-ppa2~vivid) vivid; urgency=low

  * Fixed invalid memory reads (bug #848)
  * Work around php5-mongo's bugs (bug #851)
  * Fix Phalcon\Http\Response\setFileToSend() (bug #831)
  * Fix memory leaks and memory corruption in APC and
    XCache cache backends (bug #858)
  * Fix early return from
    Phalcon\Cache\Backend\Xcache::queryKeys()

 -- Vladimir Kolesnikov <vladimir@extrememember.com>  Wed, 17 Jul 2013 14:10:00 +0300

php-phalcon (1.2.0-ppa1~vivid) vivid; urgency=low

  * Now 'compiledPath' option accept a closure to dynamically create
    the compilation path in Volt
  * Volt now supports user extensions, these can be used to extend
    better Volt
  * Now Phalcon\Mvc\Url provides an internal separation for uris for
    static resources and uris to rewrite resources
  * Added Mvc\Model\Criteria::inWhere to append an IN expression
    to the criteria
  * Added Mvc\Model\Criteria::notInWhere to append a NOT IN expression
    to the criteria
  * Added Mvc\Model\Criteria::notBetweenWhere to append a NOT BETWEEN
    expression to the criteria
  * Added Mvc\Model\Criteria::betweenWhere to append a BETWEEN expression
    to the criteria
  * Phalcon\Tag::image accepts a second parameter to allow external URLs
  * Added Phalcon\Mvc\View\Simple as an alternative view component,
    this only have a single level of rendering and works better with
    Volt's inheritance
  * Better escaping of reserved wornds in internal PHQL generation
  * Added Phalcon\Http\Request::getJsonRawBody() to return the request body
    as a decoded JSON
  * Added Phalcon\Http\Request::getHeaders()
  * Support for many to many relations in the ORM
  * Added Phalcon\Assets\Filters\Jsmin to provide on-the-fly javascript
    minification
  * Added Phalcon\Assets\Filters\Cssmin to provide on-the-fly CSS
    minification
  * Support for real nested transactions in Phalcon\Db using database
    savepoints
  * Support for create/list/drop views in Phalcon\Db
  * Added event application:viewRender to Phalcon\Mvc\Application allowing
    the developer to call the $view->render method as he/she needs
  * Added option to disable literals in PHQL statements, this highly reduces
    the possibility to be attacked using SQL injections
  * Now you can pass an array of variables with virtual local scope in
    Phalcon\Mvc\View::partial()
  * Syntax CAST(expr AS datatype) is now supported by PHQL
  * Support for CONVERT(expr USING charset) in PHQL
  * Support for {% include "hello" with [var1, var2] %}
  * Phalcon\Mvc\Collection::find receives a parameter 'fields' to specify
    a list of fields
  * Added Phalcon\Forms\Element\Email and Phalcon\Tag::emailField
  * Support to define arrays using curly braces in Volt
    {'a': 'b', 'c': 'd'} in Volt
  * Support to make multiple assigments in a single set in Volt
    {% set a = b, c = d %} in Volt
  * Volt now support 'if'/'else' blocks with empty bodies
  * Support for 'cascade' action in addition to 'restrict' in
    Virtual Foreign Keys (ORM)
  * Added missing Phalcon\Http\Request\File::getType()
  * Phalcon\Tag is not abstract anymore allowing to create instances of it
  * Phalcon\Tag is now registered as 'tag' in Phalcon\DI\FactoryDefault
  * In a handler in Phalcon\Mvc\Micro returns an object that implements
    Phalcon\Http\ResponseInterface the response is automatically send()
  * Phalcon\Mvc\View now have a chaineable API
  * Phalcon\Mvc\Micro now can optionally receive the DI in its constructor
  * Now if a method receives an incorrect number of parameters an exception
    BadMethodCallException is thrown instead of a warning
  * Phalcon\Mvc\Model/Phalcon\Mvc\Collection now checks for a method
    'onConstruct' allowing the developer to execute initialization stuff
    every time a model/collection instance is created
  * Phalcon\Mvc\Model/Phalcon\Mvc\Collection now checks for a method
    'afterFetch' allowing the developer to execute initialization stuff
    every time a model/collection instance is created
  * Added Phalcon\Mvc\Collection::summatory easing the generation of
    this type of aggregation
  * Support for boolean literals in PHQL
  * Support for complex expressions in GROUP BY clauses in PHQL
  * Now PHQL exceptions include the PHQL statement itself
  * Aliases for namespaces are now supported in PHQL
  * Acl\Memory was rewritten to make it simpler and faster, you may
    regenerate your serialized ACLs
  * Support for assigment operators +=, -=, *=, /= in Volt
  * Support for Profile-Guided optimization installation scripts (See blog)
  * Added Phalcon\Annotations\Adapter\Xcache to store annotations in Xcache
  * Added Phalcon\Mvc\Model\Metadata\Xcache to store models meta-data
    in Xcache
  * Now if a controller implements 'initialize' it only is called if
    'beforeExecuteRoute' is not stopped
  * Listeners implementing 'beforeExecuteRoute'/'afterExecuteRoute'
    are executed first than the ones implemented as methods in the
    controller/task

 -- Vladimir Kolesnikov <vladimir@extrememember.com>  Wed, 10 Jul 2013 05:12:23 +0300

php-phalcon (1.1.0-ppa1~vivid) vivid; urgency=low

  * Improvements to the query builder allowing to define bound
    parameters in the "where" methods
  * Added Mvc\Query\Builder::inWhere to append a IN expression
    to the query
  * Added Mvc\Query\Builder::notInWhere to append a NOT IN
    expression to the query
  * Added Mvc\Query\Builder::betweenWhere to append a BETWEEN
    expression to the query
  * Now Phalcon\Session\Bag injects automatically the default DI
    if one hasn't beed manually assigned
  * Added Phalcon\Forms\Manager to reference forms and retrieve them
    from any part of the application
  * If an element in Phalcon\Forms doesn't have a label defined now
    returns the element's name as label
  * Now if a validator in Phalcon\Validator has defined the option
    'cancelOnFail' => true the validation will be aborted if the
    validator fails
  * Added Phalcon\Validation\Validator\Between to check a value
    between a range of two values
  * Added Phalcon\Validation\Validator\Confirmation to check that
    a value match its confirmation value (another attribute in the
    data to validate)
  * Phalcon\Forms\Form now extends from Phalcon\DI\Injectable
    allowing developers to use application services in the
    form initialization
  * Now calls to Phalcon\Mvc\Router can be chained
  * Phalcon\Mvc\Router::getRewriteUri is now public
  * Added Phalcon\Mvc\Router\Route::beforeMatch to implement
    arbitrary conditions to unmatch a matched route
  * Phalcon\Mvc\Model can be now set up to throw an exception when
    the saving process fails
  * Added Phalcon\Assets component to manage CSS/Javascripts
    resources in an application
  * Added Phalcon\Annotations\Collection::getAll to return all the
    annotations in a collection that matches a name
  * Added Phalcon\Crypt component to provide encryption facilities
    to phalcon applications
  * Now Phalcon\Http\Request: get, getQuery y getPost returns the
    respective superglobals in case of no parameters
  * Now Phalcon\Mvc\Router supports simple/regex hostname restrictions
  * Added support for filtering/sanitizing in Phalcon\Validation
  * Added events beforeValidation/afterValidation to
    Phalcon\Validation and Phalcon\Forms\Form
  * Added ability to register user-options in Phalcon\Forms\Form
    elements
  * Fixed Phalcon\Mvc\Micro\Collections to register a controllers
    in Phalcon\Mvc\Micro
  * Added Phalcon\Tag::dateField and Phalcon\Tag::numericField
  * Added Phalcon\Forms\Element\Date and Phalcon\Forms\Element\Numeric
  * Added Phalcon\Cache\Frontend\Json to cache data as JSON
  * Added Phalcon\Tag::tagHtml and Phalcon\Tag::tagHtmlClose to
    generate any kind of HTML tags
  * Phalcon\Http\Response\Cookies is now fixed
  * Added support for automatic crypting of cookies in
    Phalcon\Http\Response\Cookies
  * Phalcon\DI\FactoryDefault now provides the 'crypt' service
  * Volt's paths are now automatically normalized to realpaths
  * Fixed bug in convert_encoding in Volt
  * Added Phalcon\Filter\UserFilterInterface to be used in custom
    filters
  * Added support for filters in Phalcon\Forms\Form elements
  * Added maximum recursion depth exceeded control in Phalcon\Kernel
  * Performance: Now Phalcon makes use of interned strings if PHP 5.4
    to reduce memory usage
  * Performance: Implemented cache of visibility for all intern
    properties in 5.3/5.4 increasing performance
  * Performance: All hash keys are now pre-calculated in compilation
    time to read/write internal properties faster
  * Performance: Now all functions are static allowing the compiler
    to inline functions or remove those that aren't used by the
    framework
  * Performance: Now Phalcon provides specific optimizations
    when the extension is compiled for NTS modules
  * Performance: Implemented function to fetch parameters from the
    VM stack with minimum overhead
  * Performance: Implemented a global PHQL parser cache to avoid
    that a same statement be parsed more than one time
  * Performance: Events by priority are now disabled by default.
    A user must explicitly define that Phalcon\Events\Manager must
    use a PriorityQueue instead of a FIFF (First In-First Fired)
  * !! Phalcon\CLI\Router API have been changed.
    Check the manual to update your bootstrap

 -- Vladimir Kolesnikov <vladimir@extrememember.com>  Wed, 26 Jun 2013 15:34:34 +0300
